<?xml version="1.0" encoding="utf-8"?>
<doc>
<assembly><name>MBrace.Azure.Client</name></assembly>
<members>
<member name="">

</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.Update``1(Microsoft.FSharp.Core.FSharpFunc{``0,``0},MBrace.ICloudAtom{``0})">
 <summary>
     Atomically updates the contained value.
 </summary>
 <param name="updater">value updating function.</param>
 <param name="atom">Atom instance to be updated.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.Transact``2(Microsoft.FSharp.Core.FSharpFunc{``0,System.Tuple{``1,``0}},MBrace.ICloudAtom{``0})">
 <summary>
     Transactionally updates the contained value.
 </summary>
 <param name="trasactF"></param>
 <param name="atom"></param>
</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.Read``1(MBrace.ICloudAtom{``0})">
 <summary>
     Dereferences a cloud atom.
 </summary>
 <param name="atom">Atom instance.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.New``1(``0)">
 <summary>
     Creates a new cloud atom instance with given value.
 </summary>
 <param name="initial">Initial value.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.IsSupportedValue``1(``0)">
 <summary>
     Checks if value is supported by current table store.
 </summary>
 <param name="value">Value to be checked.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.Force``1(``0,MBrace.ICloudAtom{``0})">
 <summary>
     Forces the contained value to provided argument.
 </summary>
 <param name="value">Value to be set.</param>
 <param name="atom">Atom instance to be updated.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudAtomProvider.Delete``1(MBrace.ICloudAtom{``0})">
 <summary>
     Deletes the provided atom instance from store.
 </summary>
 <param name="atom">Atom instance to be deleted.</param>
</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.CloudAtomProvider">
<summary>
 Atom methods for MBrace.
</summary>
</member>
<member name="">

</member>
<member name="M:MBrace.Azure.Client.CloudChannelProvider.Send``1(``0,MBrace.ISendPort{``0})">
 <summary>
     Send message to the channel.
 </summary>
 <param name="message">Message to send.</param>
 <param name="channel">Target channel.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudChannelProvider.Receive``1(MBrace.IReceivePort{``0},Microsoft.FSharp.Core.FSharpOption{System.Int32})">
 <summary>
     Receive message from channel.
 </summary>
 <param name="channel">Source channel.</param>
 <param name="timeout">Timeout in milliseconds.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudChannelProvider.New``1">
<summary>
 Creates a new channel instance.
</summary>
</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.CloudChannelProvider">
<summary>
 Channel methods for MBrace.
</summary>
</member>
<member name="">

</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.ReadFile``1(Microsoft.FSharp.Core.FSharpFunc{System.IO.Stream,Microsoft.FSharp.Control.FSharpAsync{``0}},System.String)">
 <summary>
     Reads file in store with provided deserializer function.
 </summary>
 <param name="deserializer">Deserializer function.</param>
 <param name="path">Path to file.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.GetFileSize(System.String)">
 <summary>
     Gets the size of provided file, in bytes.
 </summary>
 <param name="path">Path to file.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.GetFileName(System.String)">
 <summary>
     Returns the file name for given path.
 </summary>
 <param name="path">Input file path.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.GetDirectoryName(System.String)">
 <summary>
     Returns the directory name for given path.
 </summary>
 <param name="path">Input file path.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.FileExists(System.String)">
 <summary>
     Checks if file exists in store.
 </summary>
 <param name="path">Path to file.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.EnumerateFiles(Microsoft.FSharp.Core.FSharpOption{System.String})">
 <summary>
     Gets all files that exist in given container.
 </summary>
 <param name="directory">Path to directory. Defaults to the root directory.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.EnumerateDirectories(Microsoft.FSharp.Core.FSharpOption{System.String})">
 <summary>
     Enumerates all directories in directory.
 </summary>
 <param name="directory">Directory to be enumerated. Defaults to root directory.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.DirectoryExists(System.String)">
 <summary>
     Checks if directory exists in given path
 </summary>
 <param name="directory">Path to directory.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.DeleteFile(System.String)">
 <summary>
     Deletes file in given path.
 </summary>
 <param name="path">File path.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.DeleteDirectory(System.String,Microsoft.FSharp.Core.FSharpOption{System.Boolean})">
 <summary>
     Deletes directory from store.
 </summary>
 <param name="directory">Directory to be deleted.</param>
 <param name="recursiveDelete">Delete recursively. Defaults to false.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.CreateUniqueDirectoryPath">
<summary>
 Generates a random, uniquely specified path to directory
</summary>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.CreateFile(Microsoft.FSharp.Core.FSharpFunc{System.IO.Stream,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},System.String,System.String)">
 <summary>
     Creates a new file in store with provided serializer function.
 </summary>
 <param name="serializer">Serializer function.</param>
 <param name="directory">Containing directory.</param>
 <param name="fileName">File name.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.CreateFile(Microsoft.FSharp.Core.FSharpFunc{System.IO.Stream,Microsoft.FSharp.Control.FSharpAsync{Microsoft.FSharp.Core.Unit}},Microsoft.FSharp.Core.FSharpOption{System.String})">
 <summary>
     Creates a new file in store with provided serializer function.
 </summary>
 <param name="serializer">Serializer function.</param>
 <param name="path">Path to file. Defaults to auto-generated path.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.CreateDirectory(Microsoft.FSharp.Core.FSharpOption{System.String})">
 <summary>
     Creates a new directory in store.
 </summary>
 <param name="directory">Path to directory. Defaults to randomly generated directory.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.Combine(System.String,System.Collections.Generic.IEnumerable{System.String})">
 <summary>
     Combines a collection of file names with provided directory prefix.
 </summary>
 <param name="directory">Directory prefix path.</param>
 <param name="fileNames">File names to be combined.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.Combine(System.String[])">
 <summary>
     Combines an array of paths into a path.
 </summary>
 <param name="paths">Strings to be combined.</param>
</member>
<member name="M:MBrace.Azure.Client.CloudFileProvider.Combine(System.String,System.String)">
 <summary>
     Combines two strings into one path.
 </summary>
 <param name="path1">First path.</param>
 <param name="path2">Second path.</param>
</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.CloudFileProvider">
<summary>
 Collection of file store operations
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:MBrace.Azure.Client.Process.Type">
<summary>
 Process type.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.TotalTasks">
<summary>
 Returns the number of tasks created by this process.
</summary>
</member>
<member name="">

</member>
<member name="P:MBrace.Azure.Client.Process.Name">
<summary>
 Process name.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.InitializationTime">
<summary>
 Returns the initialization time for this process.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.Id">
<summary>
 Process id.    
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.FaultedTasks">
<summary>
 Returns the number of tasks failed to execute by this process.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.ExecutionTime">
<summary>
 Returns the execution time for this process.
</summary>
</member>
<member name="">

</member>
<member name="P:MBrace.Azure.Client.Process.CompletedTasks">
<summary>
 Returns the number of tasks completed by this process.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.Completed">
<summary>
 Returns if the process is completed.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Process.ActiveTasks">
<summary>
 Returns the number of tasks created by this process and are currently executing.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.ShowLogs">
<summary>
 Prints all cloud logs for this process.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.ShowInfo">
<summary>
 Prints a detailed report for this process.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.KillAsync">
<summary>
 Asynchronously sends a kill signal for this process.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.Kill">
<summary>
 Sends a kill signal for this process.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.GetLogsAsync">
<summary>
 Asynchronously returns all cloud logs for this process.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.GetLogs">
<summary>
 Returns all cloud logs for this process.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.ClearProcessResourcesAsync">
<summary>
 Deletes process created blob storage containers and tables.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.ClearProcessResources">
<summary>
 Deletes process created blob storage containers and tables.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.AwaitResultBoxedAsync">
<summary>
 Asynchronously waits for the process result.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process.AwaitResultBoxed">
<summary>
 Awaits for the process result.
</summary>
</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.Process">
<summary>
 Represents a cloud process.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:MBrace.Azure.Client.Process`1.AwaitResultAsync">
<summary>
 Asynchronously waits for the process result.
</summary>
</member>
<member name="M:MBrace.Azure.Client.Process`1.AwaitResult">
<summary>
 Awaits for the process result.
</summary>
</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.Process`1">
<summary>
 Represents a cloud process.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="P:MBrace.Azure.Client.Runtime.Configuration">
<summary>
 Gets the runtime associated configuration.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Runtime.ClientLogger">
<summary>
 Client logger.
</summary>
</member>
<member name="P:MBrace.Azure.Client.Runtime.ClientId">
<summary>
 Instance identifier.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:MBrace.Azure.Client.Runtime.RunAsync``1(MBrace.Cloud{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken},Microsoft.FSharp.Core.FSharpOption{MBrace.FaultPolicy})">
 <summary>
     Asynchronously execute a workflow on the distributed runtime.
 </summary>
 <param name="workflow">Workflow to be executed.</param>
 <param name="cancellationToken">Cancellation token for computation.</param>
 <param name="faultPolicy">Fault policy. Defaults to infinite retries.</param>
</member>
<member name="M:MBrace.Azure.Client.Runtime.RunAsTask``1(MBrace.Cloud{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken},Microsoft.FSharp.Core.FSharpOption{MBrace.FaultPolicy})">
 <summary>
     Execute a workflow on the distributed runtime as task.
 </summary>
 <param name="workflow">Workflow to be executed.</param>
 <param name="cancellationToken">Cancellation token for computation.</param>
 <param name="faultPolicy">Fault policy. Defaults to infinite retries.</param>
</member>
<member name="M:MBrace.Azure.Client.Runtime.Run``1(MBrace.Cloud{``0},Microsoft.FSharp.Core.FSharpOption{System.Threading.CancellationToken},Microsoft.FSharp.Core.FSharpOption{MBrace.FaultPolicy})">
 <summary>
     Execute a workflow on the distributed runtime synchronously
 </summary>
 <param name="workflow">Workflow to be executed.</param>
 <param name="cancellationToken">Cancellation token for computation.</param>
 <param name="faultPolicy">Fault policy. Defaults to infinite retries.</param>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="M:MBrace.Azure.Client.Runtime.GetHandle(MBrace.Azure.Runtime.Configuration,Microsoft.FSharp.Core.FSharpOption{System.Int32})">
 <summary>
 Gets a handle for a remote runtime.
 </summary>
 <param name="config">Runtime configuration.</param>
 <param name="waitWorkerCount">Wait until the specified number of workers join the runtime.</param>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.Runtime">
 <summary>
 Windows Azure Runtime client.
 </summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:MBrace.Azure.Client.StoreClient">
<summary>
 Provides methods for interacting with cloud storage.
</summary>
</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="">

</member>
<member name="T:System.AssemblyVersionInformation">

</member>
</members>
</doc>
